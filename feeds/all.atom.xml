<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>5minutes</title><link href="http://romgar.github.io/5minutes/" rel="alternate"></link><link href="http://romgar.github.io/5minutes/feeds/all.atom.xml" rel="self"></link><id>http://romgar.github.io/5minutes/</id><updated>2015-04-08T20:47:00+02:00</updated><entry><title>How to manage GitHub Pages on front-end project</title><link href="http://romgar.github.io/5minutes/howto-manage-ghpages-project.html" rel="alternate"></link><updated>2015-04-08T20:47:00+02:00</updated><author><name>Romain Garrigues</name></author><id>tag:romgar.github.io,2015-04-08:5minutes/howto-manage-ghpages-project.html</id><summary type="html">&lt;p&gt;You are working on a frond-end project hosted on GitHub, with lot of useful tools (grunt/gulp, sass, ...), and you want to properly manage generated files from this project on GitHub Pages ?&lt;/p&gt;
&lt;p&gt;Let's imagine this kind of folder on your &lt;code&gt;master&lt;/code&gt; branch:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;.
+-- Gruntfile.js
+-- bower.json
+-- package.json
+-- README.md
+-- dist  &amp;lt;-- You need this folder to be the root of the gh-pages branch
|   +-- index.html
|   +-- other_page.html
|   +-- theme
|   |    +-- main.css
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you want to use &lt;a href="https://pages.github.com/"&gt;GitHub pages&lt;/a&gt; to access your static files, then you need to :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;create a branch named &lt;code&gt;gh-pages&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;have all your static files at the branch root (including &lt;code&gt;index.html&lt;/code&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So that, when you checkout &lt;code&gt;gh-pages&lt;/code&gt;, you need to have:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;.
+-- index.html
+-- other_page.html
+-- theme
|   +-- main.css
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Solution 1&lt;/h1&gt;
&lt;p&gt;You could copy your &lt;code&gt;dist&lt;/code&gt; folder of &lt;code&gt;master&lt;/code&gt; in another folder (outside of this git project), then checkout to &lt;code&gt;gh-pages&lt;/code&gt;, paste copied folder to this branch, and commit.
We feel easily that it's not a clean way to manage it, we will have to manually copy/paste each time...&lt;/p&gt;
&lt;p&gt;A script could be written to do this kind of task each time we need to deploy on &lt;code&gt;gh-pages&lt;/code&gt;, but
 somebody has already done that for us : &lt;a href="https://github.com/davisp/ghp-import"&gt;ghp-import&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can install it via &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install ghp-import
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then, go to your &lt;code&gt;master&lt;/code&gt; branch, and to deploy your &lt;code&gt;dist&lt;/code&gt; folder:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dist&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It will then create a new commit (and push it) on your &lt;code&gt;gh-pages&lt;/code&gt; branch with the current files of your &lt;code&gt;dist&lt;/code&gt; folder.&lt;/p&gt;
&lt;h1&gt;Solution 2&lt;/h1&gt;
&lt;p&gt;Clone another time your project in the same project folder:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;.
+-- Gruntfile.js
+-- bower.json
+-- package.json
+-- README.md
+-- dist
|   +-- index.html
|   +-- other_page.html
|   +-- theme
|   |    +-- main.css
+-- your_project &amp;lt;-- Your cloned project repository on master branch
    +-- Gruntfile.js
    +-- bower.json
    +-- package.json
    +-- README.md
    +-- dist
    |   +-- index.html
    |   +-- other_page.html
    |   +-- theme
    |   |    +-- main.css
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Checkout your sub-cloned project to gh-pages branch, and remove everything no more needed in your &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;.
+-- Gruntfile.js
+-- bower.json
+-- package.json
+-- README.md
+-- dist
|   +-- index.html
|   +-- other_page.html
|   +-- theme
|   |    +-- main.css
+-- your_project &amp;lt;-- Your cloned project repository on gh-pages branch
    +-- index.html
    +-- other_page.html
    +-- theme
    |    +-- main.css
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Remove &lt;code&gt;dist&lt;/code&gt; folder in your &lt;code&gt;master branch&lt;/code&gt;, and replace it with a symbolic link to &lt;code&gt;your_project&lt;/code&gt; repository:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;.
+-- Gruntfile.js
+-- bower.json
+-- package.json
+-- README.md
+-- dist &amp;lt;-- Now a symlink to your_project
+-- your_project &amp;lt;-- Your cloned project repository on gh-pages branch
    +-- index.html
    +-- other_page.html
    +-- theme
    |    +-- main.css
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Your tools, that were working on &lt;code&gt;dist&lt;/code&gt; folder, will now generate new content on the project &lt;code&gt;gh-pages&lt;/code&gt; branch, and you can commit them when you want.&lt;/p&gt;</summary><category term="GitHub"></category><category term="front-end"></category></entry></feed>